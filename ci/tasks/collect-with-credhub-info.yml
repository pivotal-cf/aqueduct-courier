---
platform: linux

image_resource:
  type: registry-image
  source:
    repository: tpi-docker-virtual.usw1.packages.broadcom.com/tanzu-portfolio-insights/telemetry-for-vms/base-ci-image
    username: ((jfrog-artifactory.jfrog-username))
    password: ((jfrog-artifactory.jfrog-password))

inputs:
- name: binary
- name: smith
- name: om
- name: bosh
- name: bbl-cli-github-release

run:
  path: bash
  args:
  - -c
  - |
    set -euxo pipefail

    export ACCEPTANCE_LOCKFILE="$ACCEPTANCE_LOCKFILE"
    export OPS_MANAGER_PASSWORD="$OPS_MANAGER_PASSWORD"
    export OPS_MANAGER_URL="$OPS_MANAGER_URL"
    export OPS_MANAGER_USERNAME="$OPS_MANAGER_USERNAME"
    export TELEMETRY_TILE_GUID="$TELEMETRY_TILE_GUID"

    echo $ACCEPTANCE_LOCKFILE > /tmp/lockfile.json

    BBL_CLI=/usr/local/bin/bbl
    cp "$PWD"/bbl-cli-github-release/bbl-*_linux_amd64 "$BBL_CLI"
    chmod 755 "$BBL_CLI"

    om_cli="om/om-linux-amd64-$(cat om/version)"
    chmod 755 "$om_cli"
    cp "$om_cli" /usr/local/bin/om

    BOSH_CLI=("$PWD"/bosh/bosh-cli-*-linux-amd64)
    chmod 755 "$BOSH_CLI"
    cp "$BOSH_CLI" /usr/local/bin/bosh

    SMITH_CLI=/usr/local/bin/smith
    cp "$PWD"/smith/smith_linux_amd64 "$SMITH_CLI"
    chmod 755 "$SMITH_CLI"

    smith bosh -l /tmp/lockfile.json
    smith bosh -l /tmp/lockfile.json > temp_env.sh

    source temp_env.sh

    eval $(smith bosh -l /tmp/lockfile.json)
    eval $(smith om -l /tmp/lockfile.json)


    # Switch to expect
    expect <<'EOF'
    set timeout -1

    spawn smith bosh --lockfile=/tmp/lockfile.json ssh -- -d $::env(TELEMETRY_TILE_GUID)

    expect "\$ "

    send -- "cd ~\r"
    send -- "rm -rf ~/foundation_collection\r"
    send -- "mkdir -p ~/foundation_collection\r"
    send -- "/var/vcap/packages/telemetry-collector/telemetry-collector-linux collect --env-type development --with-credhub-info --url $::env(OPS_MANAGER_URL) --username $::env(OPS_MANAGER_USERNAME) --password $::env(OPS_MANAGER_PASSWORD) --insecure-skip-tls-verify --output-dir ~/foundation_collection\r"

    expect {
        "Success!"  { exit 0 }
        "Error"   { send_user "\nError collecting data\n"; exit 1 }
    }

    EOF

params:
  ACCEPTANCE_LOCKFILE:
  OPS_MANAGER_PASSWORD:
  OPS_MANAGER_URL:
  OPS_MANAGER_USERNAME:
