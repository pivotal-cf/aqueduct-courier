---
platform: linux

image_resource:
  type: registry-image
  source:
    repository: dev.registry.pivotal.io/tanzu-portfolio-insights/telemetry-for-vms/base-ci-image
    username: ((pivotal-image-registry.registry-username))
    password: ((pivotal-image-registry.registry-password))

inputs:
- name: binary
- name: smith
- name: om
- name: bosh

run:
  path: bash
  args:
  - -c
  - |
    set -eu

    export ACCEPTANCE_ENV_NAME="$ACCEPTANCE_ENV_NAME"
    export OPS_MANAGER_PASSWORD="$OPS_MANAGER_PASSWORD"
    export OPS_MANAGER_URL="$OPS_MANAGER_URL"
    export OPS_MANAGER_USERNAME="$OPS_MANAGER_USERNAME"
    export TELEMETRY_TILE_GUID="$TELEMETRY_TILE_GUID"
    export TOOLSMITHS_API_TOKEN="$TOOLSMITHS_API_TOKEN"

    om_cli="om/om-linux-amd64-$(cat om/version)"
    chmod 755 "$om_cli"
    cp "$om_cli" /usr/local/bin/om

    BOSH_CLI=("$PWD"/bosh/bosh-cli-*-linux-amd64)
    chmod 755 "$BOSH_CLI"
    cp "$BOSH_CLI" /usr/local/bin/bosh

    tar -C /usr/local/bin -xf smith/*.tar.gz

    # Switch to expect
    expect <<'EOF'
    set timeout -1

    spawn smith -e $::env(ACCEPTANCE_ENV_NAME) bosh ssh -- -d $::env(TELEMETRY_TILE_GUID)

    expect "\$ "

    send -- "cd ~\r"
    send -- "rm -rf ~/foundation_collection\r"
    send -- "mkdir -p ~/foundation_collection\r"
    send -- "/var/vcap/packages/telemetry-collector/telemetry-collector-linux collect --env-type development --with-credhub-info --url $::env(OPS_MANAGER_URL) --username $::env(OPS_MANAGER_USERNAME) --password $::env(OPS_MANAGER_PASSWORD) --insecure-skip-tls-verify --output-dir ~/foundation_collection\r"

    expect {
        "Success!"  { exit 0 }
        "Error"   { send_user "\nError collecting data\n"; exit 1 }
    }

    EOF

params:
  ACCEPTANCE_ENV_NAME:
  OPS_MANAGER_PASSWORD:
  OPS_MANAGER_URL:
  OPS_MANAGER_USERNAME:
  TOOLSMITHS_API_TOKEN:
